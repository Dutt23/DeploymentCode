version: '2.1'

services:

  mongo:
    image: mongo:latest
    container_name: mongocontainer
#    networks:
#      - localhost
    network_mode: "host"
    hostname: localhost
    ports:  
      - 27017:27017
    volumes:
      - /var/lib/mongodb:/var/lib/mongodb
    restart: always
    command: mongod

  zookeeper:
    image: wurstmeister/zookeeper 
#    networks:
#      - localhost
    network_mode: "host"
    hostname: localhost
    ports:
      - "2181:2181"
  
  kafka:
    build: ./kafka
    ports:
      - 8086:8086
#    networks: 
#      - localhost
    network_mode: "host"
    hostname: localhost
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 8086
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      # KAFKA_CREATE_TOPICS: "Test5:1:1,Test4:1:1"
      KAFKA_LOG_FLUSH_INTERVAL_MESSAGES: 1  
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 

  eureka-service:
    build: ./Quiz-app
#    networks: 
#      - localhost
    network_mode: "host"
    hostname: localhost
    restart: always
    container_name: eurekaContainer
    ports:
      - 8082:8082

  central-configuration:
    build: ./configuration-service
#    networks: 
#      - localhost
    network_mode: "host"
    hostname: localhost
    restart: always
    container_name: configuration-serviceContainer
    ports:
      - 8083:8083
    depends_on:
      - eureka-service


  question-generator:
    build: ./questionGenerator
#    networks: 
#      - localhost
    network_mode: "host"
    hostname: localhost
    restart: always
    container_name: question-generator-container
    ports:
      - 9090:9090
    depends_on:
      - eureka-service
      - mongo
      - kafka
      - central-configuration

#networks:
#  localhost:
